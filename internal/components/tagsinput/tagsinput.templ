package tagsinput

import "github.com/axzilla/templui/internal/utils"

type Props struct {
	ID          string
	Name        string
	Value       []string
	Placeholder string
	Class       string
	HasError    bool
	Attributes  templ.Attributes
	Disabled    bool
	Readonly    bool
	Required    bool
}

templ TagsInput(p Props) {
	<div
		id={ p.ID }
		class={ utils.TwMerge("tags-input flex items-center flex-wrap gap-0 p-0 rounded-md flex items-center justify-between bg-background",
		"focus-within:ring-2 focus-within:ring-offset-2 focus-visible:outline-hidden border ring-offset-background",
		"peer disabled:opacity-50 w-full border",
		utils.If(p.HasError, "border-destructive ring-destructive"),
		p.Class) }
		data-name={ p.Name }
		{ p.Attributes... }
	>
		<div class="tags-input-tags-container flex items-center flex-wrap gap-2">
			for _, tag := range p.Value {
				<div class="tags-input-chip flex items-center bg-primary text-xs border-transparent gap-1 px-1 rounded-md border py-0.5 items-center focus:ring-ring text-primary-foreground font-semibold">
					<span>{ tag }</span>
					<button type="button" class="tags-input-remove text-primary-foreground hover:text-destructive disabled:opacity-50 disabled:cursor-not-allowed"
					disabled?={ p.Disabled }>
						<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 pointer-events-none" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
							<path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"></path>
						</svg>
					</button>
				</div>
			}
		</div>
		<input
			type="text"
			class="tags-input-text tags-input-text flex-grow p-1 !bg-transparent outline-none border-none h-10 text-sm h-10 border-input placeholder:text-muted-foreground disabled:cursor-not-allowed"
			placeholder={ p.Placeholder }
			disabled?={ p.Disabled }
			readonly?={ p.Readonly }
		{ p.Attributes... }
		/>
		<div class="tags-input-hidden-container">
			for _, tag := range p.Value {
				<input type="hidden" name={ p.Name } value={ tag }/>
			}
		</div>
	</div>
}
